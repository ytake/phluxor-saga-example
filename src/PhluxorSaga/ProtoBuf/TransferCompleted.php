<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: event.proto

namespace PhluxorSaga\ProtoBuf;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>protobuf.TransferCompleted</code>
 */
class TransferCompleted extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.actor.Pid from = 1;</code>
     */
    protected $from = null;
    /**
     * Generated from protobuf field <code>float from_balance = 2;</code>
     */
    protected $from_balance = 0.0;
    /**
     * Generated from protobuf field <code>.actor.Pid to = 3;</code>
     */
    protected $to = null;
    /**
     * Generated from protobuf field <code>float to_balance = 4;</code>
     */
    protected $to_balance = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Phluxor\ActorSystem\ProtoBuf\Pid $from
     *     @type float $from_balance
     *     @type \Phluxor\ActorSystem\ProtoBuf\Pid $to
     *     @type float $to_balance
     * }
     */
    public function __construct($data = NULL) {
        \PhluxorSaga\Metadata\ProtoBuf\Event::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.actor.Pid from = 1;</code>
     * @return \Phluxor\ActorSystem\ProtoBuf\Pid|null
     */
    public function getFrom()
    {
        return $this->from;
    }

    public function hasFrom()
    {
        return isset($this->from);
    }

    public function clearFrom()
    {
        unset($this->from);
    }

    /**
     * Generated from protobuf field <code>.actor.Pid from = 1;</code>
     * @param \Phluxor\ActorSystem\ProtoBuf\Pid $var
     * @return $this
     */
    public function setFrom($var)
    {
        GPBUtil::checkMessage($var, \Phluxor\ActorSystem\ProtoBuf\Pid::class);
        $this->from = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float from_balance = 2;</code>
     * @return float
     */
    public function getFromBalance()
    {
        return $this->from_balance;
    }

    /**
     * Generated from protobuf field <code>float from_balance = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setFromBalance($var)
    {
        GPBUtil::checkFloat($var);
        $this->from_balance = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.actor.Pid to = 3;</code>
     * @return \Phluxor\ActorSystem\ProtoBuf\Pid|null
     */
    public function getTo()
    {
        return $this->to;
    }

    public function hasTo()
    {
        return isset($this->to);
    }

    public function clearTo()
    {
        unset($this->to);
    }

    /**
     * Generated from protobuf field <code>.actor.Pid to = 3;</code>
     * @param \Phluxor\ActorSystem\ProtoBuf\Pid $var
     * @return $this
     */
    public function setTo($var)
    {
        GPBUtil::checkMessage($var, \Phluxor\ActorSystem\ProtoBuf\Pid::class);
        $this->to = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float to_balance = 4;</code>
     * @return float
     */
    public function getToBalance()
    {
        return $this->to_balance;
    }

    /**
     * Generated from protobuf field <code>float to_balance = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setToBalance($var)
    {
        GPBUtil::checkFloat($var);
        $this->to_balance = $var;

        return $this;
    }

}

